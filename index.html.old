<!DOCTYPE html>
<html>
  <head>
    <title>Crypto Dashboard </title>
    <script src="https://cdn.jsdelivr.net/npm/web3@latest/dist/web3.min.js"></script>

    <script src="https://npmcdn.com/parse/dist/parse.min.js"></script>
    <script src="https://unpkg.com/moralis/dist/moralis.js"></script>
  </head>

  <body>
    <h1>Ofearz Crypto Dashboard</h1>

    <button id="btn-login">Metamask Login</button>
    <button id="btn-logout">Logout</button>

    <script type="text/javascript" src="./main.js"></script>
    <script> 

          let loginButton = document.getElementById('btn-login')
          let logoutButton = document.getElementById('btn-logout')

          logoutButton.onclick = function onClickLogout() {

            logoutButton.textContent = "Sign out";
            logoutButton.style = "Color: blue";
            console.log("this button has also been clicked sire.")
            logout()

          }


          loginButton.onclick = function onClickLogin() {

            loginButton.textContent = "Sign in";
            loginButton.style = "Color: red";
              console.log("this button has been clicked sire.")
              Parse.initialize()
              login()
              Moralis.authenticate().then(function (user) {
                console.log(user.get('ethAddress'))
            })
          }

        //  import { start, User, authenticate } from 'moralis/node';
const serverUrl = "https://0pdrrvslkpsk.usemoralis.com:2053/server";
const appId = "WfG94sZZpmzFgiwiNNQpoie1fgTXvDjI04AWdSAD";
start({ serverUrl, appId });
const user = await Moralis.authenticate({ 
    provider: "walletconnect", 
    mobileLinks: [
      "rainbow",
      "metamask",
      "argent",
      "trust",
      "imtoken",
      "pillar",
    ] 
})


async function login() {
  let user = User.current();
  if (!user) {
    user = await authenticate({ signingMessage: "Log in using Moralis" })
      .then(function (user) {
        console.log("logged in user:", user);
        console.log(user.get("ethAddress"));
      })
      .catch(function (error) {
        console(error);
      });
  }
}

async function logOut() {
  await User.logOut();
  console.log("logged out");
}



class MoralisTorusProvider {

    torus = new Torus({}) 
    
    async activate() {

        this.provider = await this.torus.init(
            {
                enableLogging: true,
                network: {
                    host: "<YOUR BINANCE SPEEDY NODE>",
                    networkName: "Smart Chain - Testnet",
                    chainId: 97,
                    blockExplorer: "https://testnet.bscscan.com",
                    ticker: 'BNB',
                    tickerName: 'BNB',
                },
            })
        await this.torus.login();
        
        const MWeb3 = typeof Web3 === 'function' ? Web3 : window.Web3;
        this.web3 = new MWeb3(this.torus.provider);
        this.isActivated = true;

        return this.web3;
    }
}



        </script>
  </body>
</html>